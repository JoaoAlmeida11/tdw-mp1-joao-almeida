image: node:16

# There is no install stage since it only needs to verify the cache and in case of some unplugged dependency to install it (caching unplugged one's doesn't work properly for what appear to be laking support from the dependency for PnP)
stages:
#  - code-check
#  - test
#  - build
 - deploy


# lint:
#   stage: code-check
#   script:
#     - yarn lint

# prettier:
#   stage: code-check
#   script:
#     - yarn check-format

# test_jest:
#   stage: test
#   coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
#   dependencies:
#     - install_yarn # which jobs it depends on
#   script:
#     - yarn test:ci
#   cache:
#     paths:
#      - coverage/
#   artifacts:
#     paths: 
#      - coverage/
#     when: always
#     reports:
#       junit:
#         - junit.xml
#       cobertura: coverage/cobertura-coverage.xml


# build_yarn:
#   stage: build
#   # rules:        
#   #   - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#   # dependencies:
#   #   - install_yarn
#   script:
#     - yarn install && yarn build # yarn install is only to verify cache do to unplugged dependencies
#   cache:
#     paths:
#      - public/
#   artifacts:
#     expire_in: 1 days
#     when: on_success
#     paths: 
#      - public/

netlify:
  stage: deploy
  # rules:        
  #   - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  # dependencies:
  #   - build_yarn
  script:
    - yarn install && yarn build && yarn netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --prod # yarn install is only to verify cache do to unplugged dependencies
  artifacts:
    paths:
      - public